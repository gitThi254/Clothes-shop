/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotAuthImport } from './routes/_notAuth'
import { Route as AuthenticationImport } from './routes/_authentication'
import { Route as AdminImport } from './routes/_admin'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as ProductsIdImport } from './routes/products/$id'
import { Route as NotAuthRegisterImport } from './routes/_notAuth/register'
import { Route as NotAuthLoginImport } from './routes/_notAuth/login'
import { Route as AuthenticationProfileImport } from './routes/_authentication/profile'
import { Route as AuthenticationCartImport } from './routes/_authentication/cart'
import { Route as AuthenticationProfileIndexImport } from './routes/_authentication/profile/index'
import { Route as AuthenticationCartIndexImport } from './routes/_authentication/cart/index'
import { Route as AdminAdminIndexImport } from './routes/_admin/admin/index'
import { Route as AuthenticationProfileOrderImport } from './routes/_authentication/profile/order'
import { Route as AuthenticationProfileAddressImport } from './routes/_authentication/profile/address'
import { Route as AuthenticationCartCheckoutImport } from './routes/_authentication/cart/checkout'
import { Route as AdminAdminUserImport } from './routes/_admin/admin/user'
import { Route as AdminAdminProductsImport } from './routes/_admin/admin/products'
import { Route as AdminAdminCategoryImport } from './routes/_admin/admin/category'
import { Route as AdminAdminOrderIndexImport } from './routes/_admin/admin/order/index'
import { Route as AuthenticationProfileAddressCreateImport } from './routes/_authentication/profile/address/create'
import { Route as AuthenticationProfileAddressIdImport } from './routes/_authentication/profile/address/$id'
import { Route as AuthenticationCartCheckoutCreateImport } from './routes/_authentication/cart/checkout/create'
import { Route as AuthenticationCartCheckoutIdImport } from './routes/_authentication/cart/checkout/$id'
import { Route as AdminAdminUserCreateImport } from './routes/_admin/admin/user/create'
import { Route as AdminAdminUserIdImport } from './routes/_admin/admin/user/$id'
import { Route as AdminAdminProductsCreateImport } from './routes/_admin/admin/products/create'
import { Route as AdminAdminOrderIdImport } from './routes/_admin/admin/order/$id'
import { Route as AdminAdminCategoryCreateImport } from './routes/_admin/admin/category/create'
import { Route as AdminAdminCategoryIdImport } from './routes/_admin/admin/category/$id'
import { Route as AdminAdminProductsIdIndexImport } from './routes/_admin/admin/products/$id/index'
import { Route as AdminAdminProductsIdUploadImport } from './routes/_admin/admin/products/$id/upload'
import { Route as AdminAdminhiddenFolderProductsIdItemImport } from './routes/_admin/admin/(hidden-folder)/products/$id/item'
import { Route as AdminAdminhiddenFolderProductsIdItemCreateImport } from './routes/_admin/admin/(hidden-folder)/products/$id/item/create'
import { Route as AdminAdminhiddenFolderProductsIdItemItemIdIndexImport } from './routes/_admin/admin/(hidden-folder)/products/$id/item/$itemId/index'
import { Route as AdminAdminhiddenFolderProductsIdItemItemIdUploadImport } from './routes/_admin/admin/(hidden-folder)/products/$id/item/$itemId/upload'

// Create/Update Routes

const NotAuthRoute = NotAuthImport.update({
  id: '/_notAuth',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRoute = AuthenticationImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIdRoute = ProductsIdImport.update({
  id: '/products/$id',
  path: '/products/$id',
  getParentRoute: () => rootRoute,
} as any)

const NotAuthRegisterRoute = NotAuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => NotAuthRoute,
} as any)

const NotAuthLoginRoute = NotAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => NotAuthRoute,
} as any)

const AuthenticationProfileRoute = AuthenticationProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticationRoute,
} as any)

const AuthenticationCartRoute = AuthenticationCartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => AuthenticationRoute,
} as any)

const AuthenticationProfileIndexRoute = AuthenticationProfileIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticationProfileRoute,
  } as any,
)

const AuthenticationCartIndexRoute = AuthenticationCartIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticationCartRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AdminRoute,
} as any)

const AuthenticationProfileOrderRoute = AuthenticationProfileOrderImport.update(
  {
    id: '/order',
    path: '/order',
    getParentRoute: () => AuthenticationProfileRoute,
  } as any,
)

const AuthenticationProfileAddressRoute =
  AuthenticationProfileAddressImport.update({
    id: '/address',
    path: '/address',
    getParentRoute: () => AuthenticationProfileRoute,
  } as any)

const AuthenticationCartCheckoutRoute = AuthenticationCartCheckoutImport.update(
  {
    id: '/checkout',
    path: '/checkout',
    getParentRoute: () => AuthenticationCartRoute,
  } as any,
)

const AdminAdminUserRoute = AdminAdminUserImport.update({
  id: '/admin/user',
  path: '/admin/user',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminProductsRoute = AdminAdminProductsImport.update({
  id: '/admin/products',
  path: '/admin/products',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminCategoryRoute = AdminAdminCategoryImport.update({
  id: '/admin/category',
  path: '/admin/category',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminOrderIndexRoute = AdminAdminOrderIndexImport.update({
  id: '/admin/order/',
  path: '/admin/order/',
  getParentRoute: () => AdminRoute,
} as any)

const AuthenticationProfileAddressCreateRoute =
  AuthenticationProfileAddressCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AuthenticationProfileAddressRoute,
  } as any)

const AuthenticationProfileAddressIdRoute =
  AuthenticationProfileAddressIdImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => AuthenticationProfileAddressRoute,
  } as any)

const AuthenticationCartCheckoutCreateRoute =
  AuthenticationCartCheckoutCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AuthenticationCartCheckoutRoute,
  } as any)

const AuthenticationCartCheckoutIdRoute =
  AuthenticationCartCheckoutIdImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => AuthenticationCartCheckoutRoute,
  } as any)

const AdminAdminUserCreateRoute = AdminAdminUserCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AdminAdminUserRoute,
} as any)

const AdminAdminUserIdRoute = AdminAdminUserIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AdminAdminUserRoute,
} as any)

const AdminAdminProductsCreateRoute = AdminAdminProductsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AdminAdminProductsRoute,
} as any)

const AdminAdminOrderIdRoute = AdminAdminOrderIdImport.update({
  id: '/admin/order/$id',
  path: '/admin/order/$id',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminCategoryCreateRoute = AdminAdminCategoryCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AdminAdminCategoryRoute,
} as any)

const AdminAdminCategoryIdRoute = AdminAdminCategoryIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AdminAdminCategoryRoute,
} as any)

const AdminAdminProductsIdIndexRoute = AdminAdminProductsIdIndexImport.update({
  id: '/$id/',
  path: '/$id/',
  getParentRoute: () => AdminAdminProductsRoute,
} as any)

const AdminAdminProductsIdUploadRoute = AdminAdminProductsIdUploadImport.update(
  {
    id: '/$id/upload',
    path: '/$id/upload',
    getParentRoute: () => AdminAdminProductsRoute,
  } as any,
)

const AdminAdminhiddenFolderProductsIdItemRoute =
  AdminAdminhiddenFolderProductsIdItemImport.update({
    id: '/admin/(hidden-folder)/products/$id/item',
    path: '/admin/products/$id/item',
    getParentRoute: () => AdminRoute,
  } as any)

const AdminAdminhiddenFolderProductsIdItemCreateRoute =
  AdminAdminhiddenFolderProductsIdItemCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AdminAdminhiddenFolderProductsIdItemRoute,
  } as any)

const AdminAdminhiddenFolderProductsIdItemItemIdIndexRoute =
  AdminAdminhiddenFolderProductsIdItemItemIdIndexImport.update({
    id: '/$itemId/',
    path: '/$itemId/',
    getParentRoute: () => AdminAdminhiddenFolderProductsIdItemRoute,
  } as any)

const AdminAdminhiddenFolderProductsIdItemItemIdUploadRoute =
  AdminAdminhiddenFolderProductsIdItemItemIdUploadImport.update({
    id: '/$itemId/upload',
    path: '/$itemId/upload',
    getParentRoute: () => AdminAdminhiddenFolderProductsIdItemRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/_notAuth': {
      id: '/_notAuth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NotAuthImport
      parentRoute: typeof rootRoute
    }
    '/_authentication/cart': {
      id: '/_authentication/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof AuthenticationCartImport
      parentRoute: typeof AuthenticationImport
    }
    '/_authentication/profile': {
      id: '/_authentication/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticationProfileImport
      parentRoute: typeof AuthenticationImport
    }
    '/_notAuth/login': {
      id: '/_notAuth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NotAuthLoginImport
      parentRoute: typeof NotAuthImport
    }
    '/_notAuth/register': {
      id: '/_notAuth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof NotAuthRegisterImport
      parentRoute: typeof NotAuthImport
    }
    '/products/$id': {
      id: '/products/$id'
      path: '/products/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof ProductsIdImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin/admin/category': {
      id: '/_admin/admin/category'
      path: '/admin/category'
      fullPath: '/admin/category'
      preLoaderRoute: typeof AdminAdminCategoryImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/products': {
      id: '/_admin/admin/products'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminAdminProductsImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/user': {
      id: '/_admin/admin/user'
      path: '/admin/user'
      fullPath: '/admin/user'
      preLoaderRoute: typeof AdminAdminUserImport
      parentRoute: typeof AdminImport
    }
    '/_authentication/cart/checkout': {
      id: '/_authentication/cart/checkout'
      path: '/checkout'
      fullPath: '/cart/checkout'
      preLoaderRoute: typeof AuthenticationCartCheckoutImport
      parentRoute: typeof AuthenticationCartImport
    }
    '/_authentication/profile/address': {
      id: '/_authentication/profile/address'
      path: '/address'
      fullPath: '/profile/address'
      preLoaderRoute: typeof AuthenticationProfileAddressImport
      parentRoute: typeof AuthenticationProfileImport
    }
    '/_authentication/profile/order': {
      id: '/_authentication/profile/order'
      path: '/order'
      fullPath: '/profile/order'
      preLoaderRoute: typeof AuthenticationProfileOrderImport
      parentRoute: typeof AuthenticationProfileImport
    }
    '/_admin/admin/': {
      id: '/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_authentication/cart/': {
      id: '/_authentication/cart/'
      path: '/'
      fullPath: '/cart/'
      preLoaderRoute: typeof AuthenticationCartIndexImport
      parentRoute: typeof AuthenticationCartImport
    }
    '/_authentication/profile/': {
      id: '/_authentication/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof AuthenticationProfileIndexImport
      parentRoute: typeof AuthenticationProfileImport
    }
    '/_admin/admin/category/$id': {
      id: '/_admin/admin/category/$id'
      path: '/$id'
      fullPath: '/admin/category/$id'
      preLoaderRoute: typeof AdminAdminCategoryIdImport
      parentRoute: typeof AdminAdminCategoryImport
    }
    '/_admin/admin/category/create': {
      id: '/_admin/admin/category/create'
      path: '/create'
      fullPath: '/admin/category/create'
      preLoaderRoute: typeof AdminAdminCategoryCreateImport
      parentRoute: typeof AdminAdminCategoryImport
    }
    '/_admin/admin/order/$id': {
      id: '/_admin/admin/order/$id'
      path: '/admin/order/$id'
      fullPath: '/admin/order/$id'
      preLoaderRoute: typeof AdminAdminOrderIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/products/create': {
      id: '/_admin/admin/products/create'
      path: '/create'
      fullPath: '/admin/products/create'
      preLoaderRoute: typeof AdminAdminProductsCreateImport
      parentRoute: typeof AdminAdminProductsImport
    }
    '/_admin/admin/user/$id': {
      id: '/_admin/admin/user/$id'
      path: '/$id'
      fullPath: '/admin/user/$id'
      preLoaderRoute: typeof AdminAdminUserIdImport
      parentRoute: typeof AdminAdminUserImport
    }
    '/_admin/admin/user/create': {
      id: '/_admin/admin/user/create'
      path: '/create'
      fullPath: '/admin/user/create'
      preLoaderRoute: typeof AdminAdminUserCreateImport
      parentRoute: typeof AdminAdminUserImport
    }
    '/_authentication/cart/checkout/$id': {
      id: '/_authentication/cart/checkout/$id'
      path: '/$id'
      fullPath: '/cart/checkout/$id'
      preLoaderRoute: typeof AuthenticationCartCheckoutIdImport
      parentRoute: typeof AuthenticationCartCheckoutImport
    }
    '/_authentication/cart/checkout/create': {
      id: '/_authentication/cart/checkout/create'
      path: '/create'
      fullPath: '/cart/checkout/create'
      preLoaderRoute: typeof AuthenticationCartCheckoutCreateImport
      parentRoute: typeof AuthenticationCartCheckoutImport
    }
    '/_authentication/profile/address/$id': {
      id: '/_authentication/profile/address/$id'
      path: '/$id'
      fullPath: '/profile/address/$id'
      preLoaderRoute: typeof AuthenticationProfileAddressIdImport
      parentRoute: typeof AuthenticationProfileAddressImport
    }
    '/_authentication/profile/address/create': {
      id: '/_authentication/profile/address/create'
      path: '/create'
      fullPath: '/profile/address/create'
      preLoaderRoute: typeof AuthenticationProfileAddressCreateImport
      parentRoute: typeof AuthenticationProfileAddressImport
    }
    '/_admin/admin/order/': {
      id: '/_admin/admin/order/'
      path: '/admin/order'
      fullPath: '/admin/order'
      preLoaderRoute: typeof AdminAdminOrderIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/products/$id/upload': {
      id: '/_admin/admin/products/$id/upload'
      path: '/$id/upload'
      fullPath: '/admin/products/$id/upload'
      preLoaderRoute: typeof AdminAdminProductsIdUploadImport
      parentRoute: typeof AdminAdminProductsImport
    }
    '/_admin/admin/products/$id/': {
      id: '/_admin/admin/products/$id/'
      path: '/$id'
      fullPath: '/admin/products/$id'
      preLoaderRoute: typeof AdminAdminProductsIdIndexImport
      parentRoute: typeof AdminAdminProductsImport
    }
    '/_admin/admin/(hidden-folder)/products/$id/item': {
      id: '/_admin/admin/(hidden-folder)/products/$id/item'
      path: '/admin/products/$id/item'
      fullPath: '/admin/products/$id/item'
      preLoaderRoute: typeof AdminAdminhiddenFolderProductsIdItemImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/(hidden-folder)/products/$id/item/create': {
      id: '/_admin/admin/(hidden-folder)/products/$id/item/create'
      path: '/create'
      fullPath: '/admin/products/$id/item/create'
      preLoaderRoute: typeof AdminAdminhiddenFolderProductsIdItemCreateImport
      parentRoute: typeof AdminAdminhiddenFolderProductsIdItemImport
    }
    '/_admin/admin/(hidden-folder)/products/$id/item/$itemId/upload': {
      id: '/_admin/admin/(hidden-folder)/products/$id/item/$itemId/upload'
      path: '/$itemId/upload'
      fullPath: '/admin/products/$id/item/$itemId/upload'
      preLoaderRoute: typeof AdminAdminhiddenFolderProductsIdItemItemIdUploadImport
      parentRoute: typeof AdminAdminhiddenFolderProductsIdItemImport
    }
    '/_admin/admin/(hidden-folder)/products/$id/item/$itemId/': {
      id: '/_admin/admin/(hidden-folder)/products/$id/item/$itemId/'
      path: '/$itemId'
      fullPath: '/admin/products/$id/item/$itemId'
      preLoaderRoute: typeof AdminAdminhiddenFolderProductsIdItemItemIdIndexImport
      parentRoute: typeof AdminAdminhiddenFolderProductsIdItemImport
    }
  }
}

// Create and export the route tree

interface AdminAdminCategoryRouteChildren {
  AdminAdminCategoryIdRoute: typeof AdminAdminCategoryIdRoute
  AdminAdminCategoryCreateRoute: typeof AdminAdminCategoryCreateRoute
}

const AdminAdminCategoryRouteChildren: AdminAdminCategoryRouteChildren = {
  AdminAdminCategoryIdRoute: AdminAdminCategoryIdRoute,
  AdminAdminCategoryCreateRoute: AdminAdminCategoryCreateRoute,
}

const AdminAdminCategoryRouteWithChildren =
  AdminAdminCategoryRoute._addFileChildren(AdminAdminCategoryRouteChildren)

interface AdminAdminProductsRouteChildren {
  AdminAdminProductsCreateRoute: typeof AdminAdminProductsCreateRoute
  AdminAdminProductsIdUploadRoute: typeof AdminAdminProductsIdUploadRoute
  AdminAdminProductsIdIndexRoute: typeof AdminAdminProductsIdIndexRoute
}

const AdminAdminProductsRouteChildren: AdminAdminProductsRouteChildren = {
  AdminAdminProductsCreateRoute: AdminAdminProductsCreateRoute,
  AdminAdminProductsIdUploadRoute: AdminAdminProductsIdUploadRoute,
  AdminAdminProductsIdIndexRoute: AdminAdminProductsIdIndexRoute,
}

const AdminAdminProductsRouteWithChildren =
  AdminAdminProductsRoute._addFileChildren(AdminAdminProductsRouteChildren)

interface AdminAdminUserRouteChildren {
  AdminAdminUserIdRoute: typeof AdminAdminUserIdRoute
  AdminAdminUserCreateRoute: typeof AdminAdminUserCreateRoute
}

const AdminAdminUserRouteChildren: AdminAdminUserRouteChildren = {
  AdminAdminUserIdRoute: AdminAdminUserIdRoute,
  AdminAdminUserCreateRoute: AdminAdminUserCreateRoute,
}

const AdminAdminUserRouteWithChildren = AdminAdminUserRoute._addFileChildren(
  AdminAdminUserRouteChildren,
)

interface AdminAdminhiddenFolderProductsIdItemRouteChildren {
  AdminAdminhiddenFolderProductsIdItemCreateRoute: typeof AdminAdminhiddenFolderProductsIdItemCreateRoute
  AdminAdminhiddenFolderProductsIdItemItemIdUploadRoute: typeof AdminAdminhiddenFolderProductsIdItemItemIdUploadRoute
  AdminAdminhiddenFolderProductsIdItemItemIdIndexRoute: typeof AdminAdminhiddenFolderProductsIdItemItemIdIndexRoute
}

const AdminAdminhiddenFolderProductsIdItemRouteChildren: AdminAdminhiddenFolderProductsIdItemRouteChildren =
  {
    AdminAdminhiddenFolderProductsIdItemCreateRoute:
      AdminAdminhiddenFolderProductsIdItemCreateRoute,
    AdminAdminhiddenFolderProductsIdItemItemIdUploadRoute:
      AdminAdminhiddenFolderProductsIdItemItemIdUploadRoute,
    AdminAdminhiddenFolderProductsIdItemItemIdIndexRoute:
      AdminAdminhiddenFolderProductsIdItemItemIdIndexRoute,
  }

const AdminAdminhiddenFolderProductsIdItemRouteWithChildren =
  AdminAdminhiddenFolderProductsIdItemRoute._addFileChildren(
    AdminAdminhiddenFolderProductsIdItemRouteChildren,
  )

interface AdminRouteChildren {
  AdminAdminCategoryRoute: typeof AdminAdminCategoryRouteWithChildren
  AdminAdminProductsRoute: typeof AdminAdminProductsRouteWithChildren
  AdminAdminUserRoute: typeof AdminAdminUserRouteWithChildren
  AdminAdminIndexRoute: typeof AdminAdminIndexRoute
  AdminAdminOrderIdRoute: typeof AdminAdminOrderIdRoute
  AdminAdminOrderIndexRoute: typeof AdminAdminOrderIndexRoute
  AdminAdminhiddenFolderProductsIdItemRoute: typeof AdminAdminhiddenFolderProductsIdItemRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminCategoryRoute: AdminAdminCategoryRouteWithChildren,
  AdminAdminProductsRoute: AdminAdminProductsRouteWithChildren,
  AdminAdminUserRoute: AdminAdminUserRouteWithChildren,
  AdminAdminIndexRoute: AdminAdminIndexRoute,
  AdminAdminOrderIdRoute: AdminAdminOrderIdRoute,
  AdminAdminOrderIndexRoute: AdminAdminOrderIndexRoute,
  AdminAdminhiddenFolderProductsIdItemRoute:
    AdminAdminhiddenFolderProductsIdItemRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface AuthenticationCartCheckoutRouteChildren {
  AuthenticationCartCheckoutIdRoute: typeof AuthenticationCartCheckoutIdRoute
  AuthenticationCartCheckoutCreateRoute: typeof AuthenticationCartCheckoutCreateRoute
}

const AuthenticationCartCheckoutRouteChildren: AuthenticationCartCheckoutRouteChildren =
  {
    AuthenticationCartCheckoutIdRoute: AuthenticationCartCheckoutIdRoute,
    AuthenticationCartCheckoutCreateRoute:
      AuthenticationCartCheckoutCreateRoute,
  }

const AuthenticationCartCheckoutRouteWithChildren =
  AuthenticationCartCheckoutRoute._addFileChildren(
    AuthenticationCartCheckoutRouteChildren,
  )

interface AuthenticationCartRouteChildren {
  AuthenticationCartCheckoutRoute: typeof AuthenticationCartCheckoutRouteWithChildren
  AuthenticationCartIndexRoute: typeof AuthenticationCartIndexRoute
}

const AuthenticationCartRouteChildren: AuthenticationCartRouteChildren = {
  AuthenticationCartCheckoutRoute: AuthenticationCartCheckoutRouteWithChildren,
  AuthenticationCartIndexRoute: AuthenticationCartIndexRoute,
}

const AuthenticationCartRouteWithChildren =
  AuthenticationCartRoute._addFileChildren(AuthenticationCartRouteChildren)

interface AuthenticationProfileAddressRouteChildren {
  AuthenticationProfileAddressIdRoute: typeof AuthenticationProfileAddressIdRoute
  AuthenticationProfileAddressCreateRoute: typeof AuthenticationProfileAddressCreateRoute
}

const AuthenticationProfileAddressRouteChildren: AuthenticationProfileAddressRouteChildren =
  {
    AuthenticationProfileAddressIdRoute: AuthenticationProfileAddressIdRoute,
    AuthenticationProfileAddressCreateRoute:
      AuthenticationProfileAddressCreateRoute,
  }

const AuthenticationProfileAddressRouteWithChildren =
  AuthenticationProfileAddressRoute._addFileChildren(
    AuthenticationProfileAddressRouteChildren,
  )

interface AuthenticationProfileRouteChildren {
  AuthenticationProfileAddressRoute: typeof AuthenticationProfileAddressRouteWithChildren
  AuthenticationProfileOrderRoute: typeof AuthenticationProfileOrderRoute
  AuthenticationProfileIndexRoute: typeof AuthenticationProfileIndexRoute
}

const AuthenticationProfileRouteChildren: AuthenticationProfileRouteChildren = {
  AuthenticationProfileAddressRoute:
    AuthenticationProfileAddressRouteWithChildren,
  AuthenticationProfileOrderRoute: AuthenticationProfileOrderRoute,
  AuthenticationProfileIndexRoute: AuthenticationProfileIndexRoute,
}

const AuthenticationProfileRouteWithChildren =
  AuthenticationProfileRoute._addFileChildren(
    AuthenticationProfileRouteChildren,
  )

interface AuthenticationRouteChildren {
  AuthenticationCartRoute: typeof AuthenticationCartRouteWithChildren
  AuthenticationProfileRoute: typeof AuthenticationProfileRouteWithChildren
}

const AuthenticationRouteChildren: AuthenticationRouteChildren = {
  AuthenticationCartRoute: AuthenticationCartRouteWithChildren,
  AuthenticationProfileRoute: AuthenticationProfileRouteWithChildren,
}

const AuthenticationRouteWithChildren = AuthenticationRoute._addFileChildren(
  AuthenticationRouteChildren,
)

interface NotAuthRouteChildren {
  NotAuthLoginRoute: typeof NotAuthLoginRoute
  NotAuthRegisterRoute: typeof NotAuthRegisterRoute
}

const NotAuthRouteChildren: NotAuthRouteChildren = {
  NotAuthLoginRoute: NotAuthLoginRoute,
  NotAuthRegisterRoute: NotAuthRegisterRoute,
}

const NotAuthRouteWithChildren =
  NotAuthRoute._addFileChildren(NotAuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof NotAuthRouteWithChildren
  '/cart': typeof AuthenticationCartRouteWithChildren
  '/profile': typeof AuthenticationProfileRouteWithChildren
  '/login': typeof NotAuthLoginRoute
  '/register': typeof NotAuthRegisterRoute
  '/products/$id': typeof ProductsIdRoute
  '/products': typeof ProductsIndexRoute
  '/admin/category': typeof AdminAdminCategoryRouteWithChildren
  '/admin/products': typeof AdminAdminProductsRouteWithChildren
  '/admin/user': typeof AdminAdminUserRouteWithChildren
  '/cart/checkout': typeof AuthenticationCartCheckoutRouteWithChildren
  '/profile/address': typeof AuthenticationProfileAddressRouteWithChildren
  '/profile/order': typeof AuthenticationProfileOrderRoute
  '/admin': typeof AdminAdminIndexRoute
  '/cart/': typeof AuthenticationCartIndexRoute
  '/profile/': typeof AuthenticationProfileIndexRoute
  '/admin/category/$id': typeof AdminAdminCategoryIdRoute
  '/admin/category/create': typeof AdminAdminCategoryCreateRoute
  '/admin/order/$id': typeof AdminAdminOrderIdRoute
  '/admin/products/create': typeof AdminAdminProductsCreateRoute
  '/admin/user/$id': typeof AdminAdminUserIdRoute
  '/admin/user/create': typeof AdminAdminUserCreateRoute
  '/cart/checkout/$id': typeof AuthenticationCartCheckoutIdRoute
  '/cart/checkout/create': typeof AuthenticationCartCheckoutCreateRoute
  '/profile/address/$id': typeof AuthenticationProfileAddressIdRoute
  '/profile/address/create': typeof AuthenticationProfileAddressCreateRoute
  '/admin/order': typeof AdminAdminOrderIndexRoute
  '/admin/products/$id/upload': typeof AdminAdminProductsIdUploadRoute
  '/admin/products/$id': typeof AdminAdminProductsIdIndexRoute
  '/admin/products/$id/item': typeof AdminAdminhiddenFolderProductsIdItemRouteWithChildren
  '/admin/products/$id/item/create': typeof AdminAdminhiddenFolderProductsIdItemCreateRoute
  '/admin/products/$id/item/$itemId/upload': typeof AdminAdminhiddenFolderProductsIdItemItemIdUploadRoute
  '/admin/products/$id/item/$itemId': typeof AdminAdminhiddenFolderProductsIdItemItemIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof NotAuthRouteWithChildren
  '/login': typeof NotAuthLoginRoute
  '/register': typeof NotAuthRegisterRoute
  '/products/$id': typeof ProductsIdRoute
  '/products': typeof ProductsIndexRoute
  '/admin/category': typeof AdminAdminCategoryRouteWithChildren
  '/admin/products': typeof AdminAdminProductsRouteWithChildren
  '/admin/user': typeof AdminAdminUserRouteWithChildren
  '/cart/checkout': typeof AuthenticationCartCheckoutRouteWithChildren
  '/profile/address': typeof AuthenticationProfileAddressRouteWithChildren
  '/profile/order': typeof AuthenticationProfileOrderRoute
  '/admin': typeof AdminAdminIndexRoute
  '/cart': typeof AuthenticationCartIndexRoute
  '/profile': typeof AuthenticationProfileIndexRoute
  '/admin/category/$id': typeof AdminAdminCategoryIdRoute
  '/admin/category/create': typeof AdminAdminCategoryCreateRoute
  '/admin/order/$id': typeof AdminAdminOrderIdRoute
  '/admin/products/create': typeof AdminAdminProductsCreateRoute
  '/admin/user/$id': typeof AdminAdminUserIdRoute
  '/admin/user/create': typeof AdminAdminUserCreateRoute
  '/cart/checkout/$id': typeof AuthenticationCartCheckoutIdRoute
  '/cart/checkout/create': typeof AuthenticationCartCheckoutCreateRoute
  '/profile/address/$id': typeof AuthenticationProfileAddressIdRoute
  '/profile/address/create': typeof AuthenticationProfileAddressCreateRoute
  '/admin/order': typeof AdminAdminOrderIndexRoute
  '/admin/products/$id/upload': typeof AdminAdminProductsIdUploadRoute
  '/admin/products/$id': typeof AdminAdminProductsIdIndexRoute
  '/admin/products/$id/item': typeof AdminAdminhiddenFolderProductsIdItemRouteWithChildren
  '/admin/products/$id/item/create': typeof AdminAdminhiddenFolderProductsIdItemCreateRoute
  '/admin/products/$id/item/$itemId/upload': typeof AdminAdminhiddenFolderProductsIdItemItemIdUploadRoute
  '/admin/products/$id/item/$itemId': typeof AdminAdminhiddenFolderProductsIdItemItemIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_authentication': typeof AuthenticationRouteWithChildren
  '/_notAuth': typeof NotAuthRouteWithChildren
  '/_authentication/cart': typeof AuthenticationCartRouteWithChildren
  '/_authentication/profile': typeof AuthenticationProfileRouteWithChildren
  '/_notAuth/login': typeof NotAuthLoginRoute
  '/_notAuth/register': typeof NotAuthRegisterRoute
  '/products/$id': typeof ProductsIdRoute
  '/products/': typeof ProductsIndexRoute
  '/_admin/admin/category': typeof AdminAdminCategoryRouteWithChildren
  '/_admin/admin/products': typeof AdminAdminProductsRouteWithChildren
  '/_admin/admin/user': typeof AdminAdminUserRouteWithChildren
  '/_authentication/cart/checkout': typeof AuthenticationCartCheckoutRouteWithChildren
  '/_authentication/profile/address': typeof AuthenticationProfileAddressRouteWithChildren
  '/_authentication/profile/order': typeof AuthenticationProfileOrderRoute
  '/_admin/admin/': typeof AdminAdminIndexRoute
  '/_authentication/cart/': typeof AuthenticationCartIndexRoute
  '/_authentication/profile/': typeof AuthenticationProfileIndexRoute
  '/_admin/admin/category/$id': typeof AdminAdminCategoryIdRoute
  '/_admin/admin/category/create': typeof AdminAdminCategoryCreateRoute
  '/_admin/admin/order/$id': typeof AdminAdminOrderIdRoute
  '/_admin/admin/products/create': typeof AdminAdminProductsCreateRoute
  '/_admin/admin/user/$id': typeof AdminAdminUserIdRoute
  '/_admin/admin/user/create': typeof AdminAdminUserCreateRoute
  '/_authentication/cart/checkout/$id': typeof AuthenticationCartCheckoutIdRoute
  '/_authentication/cart/checkout/create': typeof AuthenticationCartCheckoutCreateRoute
  '/_authentication/profile/address/$id': typeof AuthenticationProfileAddressIdRoute
  '/_authentication/profile/address/create': typeof AuthenticationProfileAddressCreateRoute
  '/_admin/admin/order/': typeof AdminAdminOrderIndexRoute
  '/_admin/admin/products/$id/upload': typeof AdminAdminProductsIdUploadRoute
  '/_admin/admin/products/$id/': typeof AdminAdminProductsIdIndexRoute
  '/_admin/admin/(hidden-folder)/products/$id/item': typeof AdminAdminhiddenFolderProductsIdItemRouteWithChildren
  '/_admin/admin/(hidden-folder)/products/$id/item/create': typeof AdminAdminhiddenFolderProductsIdItemCreateRoute
  '/_admin/admin/(hidden-folder)/products/$id/item/$itemId/upload': typeof AdminAdminhiddenFolderProductsIdItemItemIdUploadRoute
  '/_admin/admin/(hidden-folder)/products/$id/item/$itemId/': typeof AdminAdminhiddenFolderProductsIdItemItemIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/cart'
    | '/profile'
    | '/login'
    | '/register'
    | '/products/$id'
    | '/products'
    | '/admin/category'
    | '/admin/products'
    | '/admin/user'
    | '/cart/checkout'
    | '/profile/address'
    | '/profile/order'
    | '/admin'
    | '/cart/'
    | '/profile/'
    | '/admin/category/$id'
    | '/admin/category/create'
    | '/admin/order/$id'
    | '/admin/products/create'
    | '/admin/user/$id'
    | '/admin/user/create'
    | '/cart/checkout/$id'
    | '/cart/checkout/create'
    | '/profile/address/$id'
    | '/profile/address/create'
    | '/admin/order'
    | '/admin/products/$id/upload'
    | '/admin/products/$id'
    | '/admin/products/$id/item'
    | '/admin/products/$id/item/create'
    | '/admin/products/$id/item/$itemId/upload'
    | '/admin/products/$id/item/$itemId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/products/$id'
    | '/products'
    | '/admin/category'
    | '/admin/products'
    | '/admin/user'
    | '/cart/checkout'
    | '/profile/address'
    | '/profile/order'
    | '/admin'
    | '/cart'
    | '/profile'
    | '/admin/category/$id'
    | '/admin/category/create'
    | '/admin/order/$id'
    | '/admin/products/create'
    | '/admin/user/$id'
    | '/admin/user/create'
    | '/cart/checkout/$id'
    | '/cart/checkout/create'
    | '/profile/address/$id'
    | '/profile/address/create'
    | '/admin/order'
    | '/admin/products/$id/upload'
    | '/admin/products/$id'
    | '/admin/products/$id/item'
    | '/admin/products/$id/item/create'
    | '/admin/products/$id/item/$itemId/upload'
    | '/admin/products/$id/item/$itemId'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_authentication'
    | '/_notAuth'
    | '/_authentication/cart'
    | '/_authentication/profile'
    | '/_notAuth/login'
    | '/_notAuth/register'
    | '/products/$id'
    | '/products/'
    | '/_admin/admin/category'
    | '/_admin/admin/products'
    | '/_admin/admin/user'
    | '/_authentication/cart/checkout'
    | '/_authentication/profile/address'
    | '/_authentication/profile/order'
    | '/_admin/admin/'
    | '/_authentication/cart/'
    | '/_authentication/profile/'
    | '/_admin/admin/category/$id'
    | '/_admin/admin/category/create'
    | '/_admin/admin/order/$id'
    | '/_admin/admin/products/create'
    | '/_admin/admin/user/$id'
    | '/_admin/admin/user/create'
    | '/_authentication/cart/checkout/$id'
    | '/_authentication/cart/checkout/create'
    | '/_authentication/profile/address/$id'
    | '/_authentication/profile/address/create'
    | '/_admin/admin/order/'
    | '/_admin/admin/products/$id/upload'
    | '/_admin/admin/products/$id/'
    | '/_admin/admin/(hidden-folder)/products/$id/item'
    | '/_admin/admin/(hidden-folder)/products/$id/item/create'
    | '/_admin/admin/(hidden-folder)/products/$id/item/$itemId/upload'
    | '/_admin/admin/(hidden-folder)/products/$id/item/$itemId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  AuthenticationRoute: typeof AuthenticationRouteWithChildren
  NotAuthRoute: typeof NotAuthRouteWithChildren
  ProductsIdRoute: typeof ProductsIdRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  AuthenticationRoute: AuthenticationRouteWithChildren,
  NotAuthRoute: NotAuthRouteWithChildren,
  ProductsIdRoute: ProductsIdRoute,
  ProductsIndexRoute: ProductsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_authentication",
        "/_notAuth",
        "/products/$id",
        "/products/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/admin/category",
        "/_admin/admin/products",
        "/_admin/admin/user",
        "/_admin/admin/",
        "/_admin/admin/order/$id",
        "/_admin/admin/order/",
        "/_admin/admin/(hidden-folder)/products/$id/item"
      ]
    },
    "/_authentication": {
      "filePath": "_authentication.tsx",
      "children": [
        "/_authentication/cart",
        "/_authentication/profile"
      ]
    },
    "/_notAuth": {
      "filePath": "_notAuth.tsx",
      "children": [
        "/_notAuth/login",
        "/_notAuth/register"
      ]
    },
    "/_authentication/cart": {
      "filePath": "_authentication/cart.tsx",
      "parent": "/_authentication",
      "children": [
        "/_authentication/cart/checkout",
        "/_authentication/cart/"
      ]
    },
    "/_authentication/profile": {
      "filePath": "_authentication/profile.tsx",
      "parent": "/_authentication",
      "children": [
        "/_authentication/profile/address",
        "/_authentication/profile/order",
        "/_authentication/profile/"
      ]
    },
    "/_notAuth/login": {
      "filePath": "_notAuth/login.tsx",
      "parent": "/_notAuth"
    },
    "/_notAuth/register": {
      "filePath": "_notAuth/register.tsx",
      "parent": "/_notAuth"
    },
    "/products/$id": {
      "filePath": "products/$id.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/_admin/admin/category": {
      "filePath": "_admin/admin/category.tsx",
      "parent": "/_admin",
      "children": [
        "/_admin/admin/category/$id",
        "/_admin/admin/category/create"
      ]
    },
    "/_admin/admin/products": {
      "filePath": "_admin/admin/products.tsx",
      "parent": "/_admin",
      "children": [
        "/_admin/admin/products/create",
        "/_admin/admin/products/$id/upload",
        "/_admin/admin/products/$id/"
      ]
    },
    "/_admin/admin/user": {
      "filePath": "_admin/admin/user.tsx",
      "parent": "/_admin",
      "children": [
        "/_admin/admin/user/$id",
        "/_admin/admin/user/create"
      ]
    },
    "/_authentication/cart/checkout": {
      "filePath": "_authentication/cart/checkout.tsx",
      "parent": "/_authentication/cart",
      "children": [
        "/_authentication/cart/checkout/$id",
        "/_authentication/cart/checkout/create"
      ]
    },
    "/_authentication/profile/address": {
      "filePath": "_authentication/profile/address.tsx",
      "parent": "/_authentication/profile",
      "children": [
        "/_authentication/profile/address/$id",
        "/_authentication/profile/address/create"
      ]
    },
    "/_authentication/profile/order": {
      "filePath": "_authentication/profile/order.tsx",
      "parent": "/_authentication/profile"
    },
    "/_admin/admin/": {
      "filePath": "_admin/admin/index.tsx",
      "parent": "/_admin"
    },
    "/_authentication/cart/": {
      "filePath": "_authentication/cart/index.tsx",
      "parent": "/_authentication/cart"
    },
    "/_authentication/profile/": {
      "filePath": "_authentication/profile/index.tsx",
      "parent": "/_authentication/profile"
    },
    "/_admin/admin/category/$id": {
      "filePath": "_admin/admin/category/$id.tsx",
      "parent": "/_admin/admin/category"
    },
    "/_admin/admin/category/create": {
      "filePath": "_admin/admin/category/create.tsx",
      "parent": "/_admin/admin/category"
    },
    "/_admin/admin/order/$id": {
      "filePath": "_admin/admin/order/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/products/create": {
      "filePath": "_admin/admin/products/create.tsx",
      "parent": "/_admin/admin/products"
    },
    "/_admin/admin/user/$id": {
      "filePath": "_admin/admin/user/$id.tsx",
      "parent": "/_admin/admin/user"
    },
    "/_admin/admin/user/create": {
      "filePath": "_admin/admin/user/create.tsx",
      "parent": "/_admin/admin/user"
    },
    "/_authentication/cart/checkout/$id": {
      "filePath": "_authentication/cart/checkout/$id.tsx",
      "parent": "/_authentication/cart/checkout"
    },
    "/_authentication/cart/checkout/create": {
      "filePath": "_authentication/cart/checkout/create.tsx",
      "parent": "/_authentication/cart/checkout"
    },
    "/_authentication/profile/address/$id": {
      "filePath": "_authentication/profile/address/$id.tsx",
      "parent": "/_authentication/profile/address"
    },
    "/_authentication/profile/address/create": {
      "filePath": "_authentication/profile/address/create.tsx",
      "parent": "/_authentication/profile/address"
    },
    "/_admin/admin/order/": {
      "filePath": "_admin/admin/order/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/products/$id/upload": {
      "filePath": "_admin/admin/products/$id/upload.tsx",
      "parent": "/_admin/admin/products"
    },
    "/_admin/admin/products/$id/": {
      "filePath": "_admin/admin/products/$id/index.tsx",
      "parent": "/_admin/admin/products"
    },
    "/_admin/admin/(hidden-folder)/products/$id/item": {
      "filePath": "_admin/admin/(hidden-folder)/products/$id/item.tsx",
      "parent": "/_admin",
      "children": [
        "/_admin/admin/(hidden-folder)/products/$id/item/create",
        "/_admin/admin/(hidden-folder)/products/$id/item/$itemId/upload",
        "/_admin/admin/(hidden-folder)/products/$id/item/$itemId/"
      ]
    },
    "/_admin/admin/(hidden-folder)/products/$id/item/create": {
      "filePath": "_admin/admin/(hidden-folder)/products/$id/item/create.tsx",
      "parent": "/_admin/admin/(hidden-folder)/products/$id/item"
    },
    "/_admin/admin/(hidden-folder)/products/$id/item/$itemId/upload": {
      "filePath": "_admin/admin/(hidden-folder)/products/$id/item/$itemId/upload.tsx",
      "parent": "/_admin/admin/(hidden-folder)/products/$id/item"
    },
    "/_admin/admin/(hidden-folder)/products/$id/item/$itemId/": {
      "filePath": "_admin/admin/(hidden-folder)/products/$id/item/$itemId/index.tsx",
      "parent": "/_admin/admin/(hidden-folder)/products/$id/item"
    }
  }
}
ROUTE_MANIFEST_END */
